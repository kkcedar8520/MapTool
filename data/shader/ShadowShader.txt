struct VS_OUT
{
	float4 p : SV_POSITION;
	float3 n : NORMAL;
	float4 c : COLOR0;
	float2 t : TEXCOORDO;
	float3 world : TEXCOORD1;
	float2 tex :TEXCOORD2;
	float time : TEXCOORD3;
};

struct VS_IN
{
	float3 p : POINT;
	float3 n : NORMAL;
	float4 c : COLOR;
	float2 t : TEXT;
};

cbuffer m_ConData : register(b0)
{
	float4x4 g_matWorld : packoffset(c0);
	float4x4 g_matView : packoffset(c4);
	float4x4 g_matProj : packoffset(c8);
	float4 time : packoffset(c12);
	uint index : packoffset(c16);

};

cbuffer m_Light : register(b1)
{
	float4 g_cAmbientLightColor;
	float4 g_cDifuseLightColor;
	float4 g_cSpecularLightColor;
	float4 g_vLightDir;	//감쇠
	float4 g_vLightPos;	//반지름
	float4 g_vEyeDir;	//w 강도
	float4 g_vEyePos;	//반지름
	float4 g_vSpot;
	float4x4 g_LTM;
};

VS_OUT VS(VS_IN data)
{
	VS_OUT vout;
	float4 vLocal = float4(data.p, 1.0f);
	float4 vWorld = mul(vLocal, g_matWorld);
	float4 vView = mul(vWorld, g_matView);
	float4 vProj = mul(vView, g_matProj);
	vout.p = vProj;
	vout.n = data.n;
	vout.c = time;
	vout.t = data.t;

	return vout;
}

VS_OUT VSDS(VS_IN data)
{
	VS_OUT vout;
	float4 vLocal = float4(data.p, 1.0f);
	float4 vWorld = mul(vLocal, g_matWorld);
	float4 vView = mul(vWorld, g_matView);
	float4 vProj = mul(vView, g_matProj);
	vout.p = vProj;
	vout.n = data.n;
	vout.c = time;
	vout.t = data.t;
	vout.tex = vout.p.zw;
	return vout;
}


Texture2D		g_txDiffuseA : register(t0);
SamplerState	g_Sample0 : register(s0);

struct PS_IN
{
	float4 p : SV_POSITION;
	float3 n : NORMAL;
	float4 c : COLOR0;
	float2 t : TEXCOORDO;
	float3 world : TEXCOORD1;
	float2 tex :TEXCOORD2;
	float time : TEXCOORD3;
};

struct PS_OUT
{
	float4 add : SV_TARGET0;
	float4 mul : SV_TARGET1;
};

float4 PS(PS_IN vsdata) : SV_TARGET0
{
	return vsdata.c;
}

float4 PSDS(PS_IN vsdata) : SV_TARGET0
{
	float4 shadow = vsdata.tex.x/vsdata.tex.y;
	return shadow;
	//return float4(shadow, shadow, shadow, 1.0f);
}
